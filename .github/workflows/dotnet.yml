name: .NET

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Publish
      run: dotnet publish --configuration Release --runtime win-x64 --output artifacts/win-x64 --self-contained false
    - name: Create artifact # This would actually build your project, using zip for an example artifact
      run: |
        zip -r artifacts/win-x64.zip artifacts/win-x64
        rm -rf artifacts/win-x64
    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: ./artifacts    
  
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Determine version
      id: version_step
      run: echo "::set-output name=version::$(git log -1 --pretty=format:%h)"
    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: artifacts
        path: artifacts
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.version_step.outputs.version }}
        release_name: Release ${{ steps.version_step.outputs.version }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: artifacts/win-x64.zip
        asset_name: win-x64.zip
        asset_content_type: application/zip
